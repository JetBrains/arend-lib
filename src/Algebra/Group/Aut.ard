\import Algebra.Group
\import Algebra.Group.Category
\import Algebra.Monoid
\import Algebra.Monoid.Category
\import Category
\import Paths
\import Paths.Meta

\instance Aut {A : \1-Type} (a : A) : Group (a = a)
  | ide => idp
  | * => *>
  | ide-left {x} => idp_*> x
  | ide-right => idp
  | *-assoc {x} {y} {z} => *>-assoc x y z
  | inverse => inv
  | inverse-left {x} => inv_*> x
  | inverse-right {x} => *>_inv x


\func End {C : Precat} (c : C) : Monoid (C.Hom c c) \cowith
  | ide => C.id c
  | * => C.âˆ˜
  | ide-left => C.id-left
  | ide-right => C.id-right
  | *-assoc => C.o-assoc
