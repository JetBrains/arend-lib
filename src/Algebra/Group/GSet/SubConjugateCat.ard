\import Algebra.Group
\import Algebra.Group.GSet
\import Algebra.Group.GSet.Category
\import Algebra.Group.GSet.ExampleActions
\import Algebra.Group.Sub
\import Category
\import Category.Adjoint
\import Equiv (Equiv)
\import Function.Meta
\import Logic
\import Meta
\import Paths
\import Paths.Meta
\import Relation.Equivalence
\open Algebra.Group

\instance SubConjugacyPrecat (G : Group) : Precat (SubGroup G) \cowith
  | Hom N H => \Sigma (g : G) (ConjugateSubGroup g N SubGroupPreorder.<= H)
  | id H => (G.ide, transport (\lam Z => Z SubGroupPreorder.<= H) (inv $ GroupAction.id-action {ConjSubGroupAction G}) SubGroupPreorder.<=-refl)
  | o {_} {_} {_} a b => (a.1 G.* b.1, helper a b) --(a.1 G.* b.1, transport (\lam H => H SubGroupPreorder.<= Z) (inv $ GroupAction.**-assoc {ConjSubGroupAction G})
--      (SubGroupPreorder.<= a.2 b.2)) -- \Sigma (g : G) (ConjugateSubGroup g X Order.PartialOrder.<= Z)
  | id-left => exts G.ide-left
  | id-right => exts G.ide-right
  | o-assoc => exts G.*-assoc
  \where \private {
    \lemma helper {X Y Z : SubGroup G} (a :  \Sigma (g : G) (ConjugateSubGroup g Y SubGroupPreorder.<= Z))
                  (b : \Sigma (g : G) (ConjugateSubGroup g X SubGroupPreorder.<= Y)) :
      ConjugateSubGroup (a.1 G.* b.1) X SubGroupPreorder.<= Z => unfold \lam g p => {?}

    \lemma helper2 {X Y Z : SubGroup G} (a :  \Sigma (g : G) (ConjugateSubGroup g Y SubGroupPreorder.<= Z))
                   (b : \Sigma (g : G) (ConjugateSubGroup g X SubGroupPreorder.<= Y)) :
      ConjugateSubGroup a.1 (ConjugateSubGroup b.1 X) SubGroupPreorder.<= Z => unfold \lam g p => {?} --  SubGroupPreorder.<=âˆ˜ b.2 a.2
  }

\func \infix 3 subconj {G : Group} (H K : SubGroup G) : \Prop => TruncP (Cat.Hom {SubConjugacyPrecat G} H K)