\import Algebra.Pointed
\import Homotopy.Pointed \using (Pointed \as HPointed)


\data \infix 7 wedge (X Y : HPointed)
  | left (x : X) : X wedge Y
  | right (y : Y) : X wedge Y
  | wglue : left X.base = right Y.base
  \where {
    \func to_prod {X Y : HPointed} (t : X wedge Y) : \Sigma X Y  \elim t
      | left x => (x, Y.base)
      | right y => (X.base, y)
      | wglue => idp {\Sigma X Y}{X.base, Y.base}

    \func pointed (X Y : HPointed) : HPointed (X wedge Y) {| base => left X.base} \cowith
  }