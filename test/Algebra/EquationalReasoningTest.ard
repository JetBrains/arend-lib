\import Algebra.Meta
\import Function
\import Meta
\import Paths

\lemma test1 (f : Nat -> Nat) (x y z : Nat) (p : f x = y) (q : f y = z) (s : z = f x) : f z = z
  => equation $' {pmap f s}
     f (f x)  $' {pmap f p}
     f y      $' {q}

\lemma test2 (f : Nat -> Nat) (x y z : Nat) (p : f x = y) (q : f y = z) (s : z = f x) : f z = z
  => \let t => equation $'
      f z      $' {pmap f s}
      f (f x)  $' {pmap f p}
      f y      $' {q}
      z
    \in t

\lemma test3 (f : Nat -> Nat) (x y z : Nat) (p : f x = y) (q : f y = z) (s : z = f x) : f z = z
  => equation $'
     f z      $' {pmap f s}
     f (f x)  $' {pmap f p}
     f y      $' {q}
     z

\lemma test4 : 0 = 0
  => equation

\lemma test4a
  => fails equation

\lemma test5 : 0 = 0
  => \let t => equation 0 \in t

\lemma test5a : 0 = 0
  => equation 0

\lemma test5b
  => fails {0 = 0} equation 1

\lemma test6 (x y : Nat) (p : x = y) : x = y
  => equation {p}

\lemma test6a (x y : Nat) (p : x = y) : x = y
  => \let t => equation {p} \in t

\lemma test7 (f : Nat -> Nat) (x y z : Nat) (p : f x = y) (q : f y = z) (s : z = f x) : f z = z
  => equation {pmap f s} {pmap f p} {q}

\lemma equivTest (x y z : Nat) (p : x = y) (q : z = y) : z = x
  => equation
