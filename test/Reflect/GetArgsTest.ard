\import Data.Bool
\import Function
\import Reflect.ConcreteExpr
\import Reflect.Meta

\func test1 : getArgs id {3} 2 {"abs"} = (numberExpr 3, false) :: (numberExpr 2, true) :: (stringExpr "abs", false) :: nil => idp

\func test2 : getArgs (\lam x => x) 1 {2} 3 = (numberExpr 1, true) :: (numberExpr 2, false) :: (numberExpr 3, true) :: nil => idp

\func test3 : getArgs (\lam (x : Array (\Sigma ConcreteExpr Bool)) => x) 1 {2} 3 = (numberExpr 1, true) :: (numberExpr 2, false) :: (numberExpr 3, true) :: nil => idp

\func test4 : getArgs (\lam (x y : Array (\Sigma ConcreteExpr Bool)) (z : Nat) => (x,y,z)) 1 {2} 3 = \lam y z => ((numberExpr 1, true) :: (numberExpr 2, false) :: (numberExpr 3, true) :: nil, y, z) => idp
