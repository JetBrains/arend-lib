\import Data.Array
\import Data.Bool
\import Reflect.ConcreteExpr
\import Reflect.IO

\lemma getArgsTest : runIO getArgs = nil => idp

\lemma getArgsTest2 : runIO getArgs 123 {"abc"} = (numberExpr 123, true) :: (stringExpr "abc", false) :: nil => idp

\lemma getArgsTest3 : runIO (getArgs >>= return) = nil => idp

\lemma getArgsTest4 : runIO (getArgs >>= return) {123} "abc" = (numberExpr 123, false) :: (stringExpr "abc", true) :: nil => idp

\lemma getArgsTest5 : runIO (getArgs >>= \lam a1 => getArgs >>= \lam a2 => return (a1 ++ a2)) 123 = (numberExpr 123, true) :: (numberExpr 123, true) :: nil => idp
