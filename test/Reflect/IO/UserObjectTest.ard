\import Meta
\import Reflect.ConcreteExpr
\import Reflect.IO
\import Reflect.IO.Meta

\func pushPopTest {A : \Type} (a : A) : runIO (do {
  pushObject "A" (quoteExpr a),
  popObject "A"
}) = quoteExpr a => idp

\func pushPeekPopTest {A : \Type} (a : A) : runIO (do {
  pushObject "A" (quoteExpr a),
  x <- peekObject "A",
  y <- popObject "A",
  return (x,y)
}) = (quoteExpr a, quoteExpr a) => idp

\func pushPopPopTest {A : \Type} (a : A) => fails (runIO (do {
  pushObject "A" (quoteExpr a),
  x <- popObject "A",
  y <- popObject "A",
  return (x,y)
}))

\func pushPopTest2 {A B : \Type} (a : A) => fails (runIO (do {
  pushObject "A" (quoteExpr a),
  popObject "B",
}))

\func pushPushObject {A : \Type} (a a' : A) : runIO (do {
  pushObject "A" (quoteExpr a),
  pushObject "A" (quoteExpr a'),
  x <- popObject "A",
  y <- popObject "A",
  return (x,y)
}) = (quoteExpr a', quoteExpr a) => idp

\func pushPopTest3 {A B : \Type} (a : A) (b : B) : runIO (do {
  pushObject "A" (quoteExpr a),
  pushObject "B" (quoteExpr b),
  x <- popObject "A",
  y <- popObject "B",
  return (x,y)
}) = (quoteExpr a, quoteExpr b) => idp
